// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model images {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  file_id   String
  url       String
  products products? @relation(fields: [productsId], references: [id])
  productsId String? @db.ObjectId
}

model users {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String?
  following String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reviews   shopReviews[]
}

model shopReviews {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      users    @relation(fields: [userId], references: [id])
  rating    Float
  reviews   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shopsId   String   @db.ObjectId
  shops     shops    @relation(fields: [shopsId], references: [id])
}

model shops {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  bio           String?
  category      String
  coverBanner   String?
  address       String
  opening_hours String?
  website       String?
  socialLinks   Json[]
  ratings       Float    @default(0)
  reviews       shopReviews[]
  sellers       sellers[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  products      products[]
}

model sellers {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String   @unique
  phone_number  String
  country       String
  password      String
  stripeId      String?  @unique
  shop          shops?  @relation(fields: [shopId], references: [id])
  shopId        String?  @db.ObjectId @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model site_config {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  categories    String[]
  subCategories Json
}

model discount_codes {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  public_name   String
  discountType  String
  discountValue Float
  discountCode  String   @unique
  sellerId      String   @db.ObjectId
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model products {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  title                 String
  slug                  String @unique
  category              String
  subCategory           String
  description           String
  detailed_description  String
  images                images[]
  video_url             String?
  tags                  String[]
  brand                 String?
  colors                String[]
  sizes                 String[]
  starting_date         DateTime?
  ending_date           DateTime?
  stock                 Int
  sale_price            Float
  regular_price         Float
  ratings               Float @default(0)
  warranty              String?
  custom_specifications  Json?
  custom_properties     Json?
  isDeleted             Boolean? @default(false)
  cashOnDelivery        String?
  discount_codes        String[] @db.ObjectId
  status                prodStatus @default(Active)
  deletedAt             DateTime?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  shopId                String @db.ObjectId
  Shop                  shops @relation(fields: [shopId], references: [id])
  totalSales            Int    @default(0)
}

enum prodStatus {
  Active
  Pending
  Draft
}