// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model images {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  file_id   String
  url       String
  products products? @relation(fields: [productsId], references: [id])
  productsId String? @db.ObjectId
}

model users {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String          @unique
  role        String          @default("user")
  password    String?
  following   String[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  reviews     shopReviews[]
  followings  followers[]
  orders      orders[]
}

model shopReviews {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  userId    String      @db.ObjectId
  user      users       @relation(fields: [userId], references: [id])
  rating    Float
  reviews   String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  shopsId   String      @db.ObjectId
  shops     shops       @relation(fields: [shopsId], references: [id])
}

model followers {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  shopsId   String   @db.ObjectId
  user      users    @relation(fields: [userId], references: [id])
  shops     shops?   @relation(fields: [shopsId], references: [id])

  @@unique([userId, shopsId]) // One user can follow the same shop only once
}

model shops {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  bio           String?
  category      String
  coverBanner   String?         @default("https://ik.imagekit.io/adityakashyap5047/Eshop/Cover%20Picture/Banner_Image.png?updatedAt=1758872731741")
  avatar        String?         @default("https://ik.imagekit.io/adityakashyap5047/Eshop/Cover%20Picture/image.png?updatedAt=1758872565520")
  address       String
  opening_hours String?
  website       String?
  socialLinks   Json[]
  ratings       Float           @default(0)
  reviews       shopReviews[]
  sellers       sellers[]
  followers     followers[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  products      products[]
  isDeleted     Boolean         @default(false)
  deletedAt     DateTime?
  imagesId      String?         @db.ObjectId
  orders        orders[]
}

model sellers {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String      @unique
  phone_number  String
  country       String
  password      String
  stripeId      String?     @unique
  shop          shops?      @relation(fields: [shopId], references: [id])
  shopId        String?     @db.ObjectId @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  isDeleted     Boolean     @default(false)
  deletedAt     DateTime?
}

model site_config {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  categories    String[]
  subCategories Json
  logo  String?
  banner  String?
}

model discount_codes {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  public_name   String
  discountType  String
  discountValue Float
  discountCode  String   @unique
  sellerId      String   @db.ObjectId
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model products {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  title                 String
  slug                  String @unique
  category              String
  subCategory           String
  description           String
  detailed_description  String
  images                images[]
  video_url             String?
  tags                  String[]
  brand                 String?
  colors                String[]
  sizes                 String[]
  starting_date         DateTime?
  ending_date           DateTime?
  stock                 Int
  sale_price            Float
  regular_price         Float
  ratings               Float @default(0)
  warranty              String?
  custom_specifications  Json?
  custom_properties     Json?
  isDeleted             Boolean? @default(false)
  cashOnDelivery        String?
  discount_codes        String[] @db.ObjectId
  status                prodStatus @default(Active)
  deletedAt             DateTime?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  shopId                String @db.ObjectId
  Shop                  shops @relation(fields: [shopId], references: [id])
  totalSales            Int    @default(0)
}

enum prodStatus {
  Active
  Pending
  Draft
}

model userAnalytics {
  id                    String      @id @default(auto()) @map("_id") @db.ObjectId
  userId                String      @unique
  country               String?
  city                  String?
  device                String?
  lastVisited           DateTime
  actions               Json?
  recommendations       Json?
  lastTrained           DateTime    @default(now())

  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
}

model productAnalytics  {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  productId     String    @unique
  shopId        String
  views         Int       @default(0)
  cartAdds      Int       @default(0)
  wishListAdds  Int       @default(0)
  purchases     Int       @default(0)
  lastViewedAt  DateTime

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model shopAnalytics {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  totalVisitors   Int       @default(0)

  countryStats    Json?
  cityStats       Json?
  deviceStats     Json?

  lastVisitedAt   DateTime

  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model uniqueShopVisitors{
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  shopId    String    @db.ObjectId
  userId    String    @db.ObjectId
  visitedAt DateTime  @default(now())

  @@unique([shopId, userId])
}

model orders {
  id                  String          @id @default(auto()) @map("_id") @db.ObjectId
  userId              String          @db.ObjectId
  user                users           @relation(fields: [userId], references: [id])
  shopId              String          @db.ObjectId
  shop                shops           @relation(fields: [shopId], references: [id])
  total               Float
  shippingAddressId   String?
  couponCode          String?
  discountAmount      Float?
  status              String
  deliveryStatus      String          @default("Ordered")
  items               orderItems[]    @relation("OrderItemsRelation")

  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
}

model orderItems{
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  orderId           String    @db.ObjectId
  productId         String
  quantity          Int
  price             Float
  selectedOptions   Json?

  orders            orders    @relation(fields: [orderId], references: [id], name: "OrderItemsRelation")
  createdAt         DateTime  @default(now())
}

enum addressType {
  Home
  Work
  Other
}

model address {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  userId        String      @db.ObjectId
  label         addressType
  name          String
  street        String
  city          String
  zip           String
  country       String
  isDefault     Boolean     @default(false)
  createdAt     DateTime    @default(now())
}

model notifications{
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  creatorId       String    @db.ObjectId
  receiverId      String
  redirect_link   String?
  title           String
  message         String
  status          String    @default("Unread")

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}